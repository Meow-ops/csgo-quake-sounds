syntax = "proto3";


// Sent to both
message PacketInfo {
	enum Type {
		GAME_EVENT = 0;
		PLAY_SOUND = 1;
		SOUND_REQUEST = 2;
		SOUND_RESPONSE = 3;
		CLIENT_UPDATE = 4;
	}

	Type type = 1;
	int32 length = 2;
}

message SoundRequest {
	repeated bytes sound_hash = 1; // should be 64 bytes
}

message SoundResponse {
	bytes data = 1;
	bytes hash = 2; // should be 64 bytes
}


// Sent to server
message GameEvent {
	enum Type {
		MVP = 0;
		ROUND_WIN = 1;
		ROUND_LOSE = 2;
		SUICIDE = 3;
		TEAMKILL = 4;
		DEATH = 5;
		FLASH = 6;
		KNIFE = 7;
		HEADSHOT = 8;
		KILL = 9;
		COLLATERAL = 10;
		ROUND_START = 11;
		TIMEOUT = 12;
	}

	Type update = 1;
	bytes proposed_sound_hash = 2; // should be 64 bytes
	int32 kill_count = 3;
	int32 round = 4;
}

message ClientUpdate {
	enum PlayerStatus {
		// Player connects/disconnects from an ingame server
		CONNECTED = 0;
		UNCONNECTED = 1;
	}

	PlayerStatus status = 1;
	bytes map = 2;
	fixed64 steamid = 3;
	bytes shard_code = 4;
}


// Sent to client
message PlaySound {
	fixed64 steamid = 1;
	bytes sound_hash = 2; // should be 64 bytes
}
